{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(завантаження...)",
			"...1 additional file not shown": "...1 додатковий файл не показано",
			"...{0} additional files not shown": "...не показано додаткових файлів: {0}",
			"1 implementation": "1 реалізація",
			"1 reference": "1 посилання",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Отримання визначень typings для IntelliSense.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Отримання typings...",
			"Add all missing imports": "Додати всі відсутні імпорти",
			"Allow": "Дозволити",
			"Always": "Завжди",
			"An error occurred while renaming file": "Помилка під час перейменування файлу",
			"Analyzing '{0}' and its dependencies": "Аналіз \"{0}\" та його залежностей",
			"Checking for update of JS/TS imports": "Перевірка оновлення для імпортованих даних JS/TS",
			"Configure Excludes": "Налаштування винятків",
			"Configure jsconfig": "Налаштувати jsconfig",
			"Configure jsconfig.json": "Налаштувати jsconfig.json",
			"Configure tsconfig": "Налаштувати tsconfig",
			"Configure tsconfig.json": "Налаштувати tsconfig.json",
			"Could not apply refactoring": "Не вдалося застосувати рефакторинг",
			"Could not detect a Node installation to run TS Server.": "Не вдалося виявити встановлення Node для запуску TS Server.",
			"Could not determine TypeScript or JavaScript project": "Не вдалося визначити проект TypeScript або JavaScript.",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "Не вдалося визначити проект TypeScript або JavaScript. Непідтримуваний тип файлу",
			"Could not determine references": "Не вдалося визначити посилання.",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Не вдалося встановити файли типізації для мови JavaScript. Переконайтеся, що NPM встановлено або вкажіть шлях до файлу \"typescript.npm\" у параметрах середовища користувача. Додаткові відомості можна переглянути в [документації]({0}).",
			"Could not load the TypeScript version at this path": "Не вдалося завантажити версію TypeScript за цим шляхом",
			"Could not open TS Server log file": "Не вдалося відкрити файл журналу сервера TS",
			"Disable logging": "Вимкнути ведення журналу",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Вимкнути семантичну перевірку у файлі JavaScript. Необхідно розташувати на початку файлу.",
			"Dismiss": "Відхилити",
			"Don't Show Again": "Більше не показувати",
			"Don't show again": "Більше не показувати",
			"Enable logging and restart TS server": "Увімкнути ведення журналу та перезапустити TS server",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Увімкнути семантичну перевірку у файлі JavaScript. Необхідно розташувати на початку файлу.",
			"Enter file path": "Введіть шлях до файлу",
			"Enter new file path...": "Введіть шлях до нового файлу...",
			"Extract to constant": "Витягнути до константи",
			"Extract to function": "Витягнути до функції",
			"Failed to resolve {0} as module": "Не вдалося розпізнати {0} як модуль",
			"Fetching data for better TypeScript IntelliSense": "Отримання даних для покращення IntelliSense TypeScript",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "Файл не є частиною проекту JavaScript. Перегляньте [документацію tsconfig.json]({0}), щоб дізнатися більше.",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "Файл не є частиною проекту TypeScript. Перегляньте [документацію tsconfig.json]({0}), щоб дізнатися більше.",
			"File is not part opened folders": "Файл не є частиною відкритих папок",
			"Find file references failed. No resource provided.": "Не вдалося знайти посилання на файли. Ресурси не надано.",
			"Find file references failed. Requires TypeScript 4.2+.": "Не вдалося знайти посилання на файли. Потрібна TypeScript версії 4.2 або новішої.",
			"Find file references failed. Unknown file type.": "Не вдалося знайти посилання на файли. Невідомий тип файлу.",
			"Find file references failed. Unsupported file type.": "Не вдалося знайти посилання на файли. Тип файлу не підтримується.",
			"Finding file references": "Пошук посилань на файли",
			"Finding source definitions": "Пошук визначень джерел",
			"Fix all fixable JS/TS issues": "Виправити всі виправні проблеми JS/TS",
			"Follow link": "Перейти за посиланням",
			"Go to Source Definition failed. No resource provided.": "Не вдалося перейти до визначення джерела. Ресурси не надано.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Не вдалося перейти до визначення джерела. Потрібна TypeScript 4.7 або новішої версії.",
			"Go to Source Definition failed. Unknown file type.": "Не вдалося перейти до визначення джерела. Невідомий тип файлу.",
			"Go to Source Definition failed. Unsupported file type.": "Не вдалося перейти до визначення джерела. Тип файлу не підтримується.",
			"Initializing '{0}'": "Ініціалізація \"{0}\"",
			"JS/TS IntelliSense Status": "Стан IntelliSense JS/TS",
			"JSDoc comment": "Коментар JSDoc",
			"Learn More": "Дізнатися більше",
			"Learn more about JS/TS refactorings": "Дізнатися більше про рефакторинги JS/TS",
			"Learn more about managing TypeScript versions": "Дізнатися більше про управління версіями TypeScript",
			"Loading IntelliSense status": "Завантаження стану IntelliSense",
			"Move to File": "Перемістити до файлу",
			"Never": "Ніколи",
			"Never in this Workspace": "Ніколи в цій робочій області",
			"No": "Ні",
			"No jsconfig": "Немає jsconfig",
			"No opened folders": "Немає відкритих папок",
			"No source definitions found.": "Визначення джерел не знайдено.",
			"No tsconfig": "Немає tsconfig",
			"Not now": "Не зараз",
			"Open config file": "Відкрити файл конфігурації",
			"Organize Imports": "Упорядкувати імпорти",
			"Partial Mode": "Частковий режим",
			"Paste with imports": "Вставити з імпортом",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Відкрийте папку в VS Code, щоб використовувати проект JavaScript або TypeScript.",
			"Please report an issue against Yarn PnP": "Повідомте про проблему, пов’язану з Yarn PnP",
			"Please update your TypeScript version": "Оновіть свою версію TypeScript",
			"Project Wide IntelliSense not available": "IntelliSense для всього проекту недоступний",
			"Remove Unused Imports": "Видалити невикористані імпорти",
			"Remove all unused code": "Видалити весь невикористаний код",
			"Report Issue": "Повідомити про проблему",
			"Report issue against Yarn PnP": "Повідомити про проблему, пов’язану з Yarn PnP",
			"Select Version": "Вибрати версію",
			"Select code action to apply": "Виберіть дію коду для застосування",
			"Select existing file...": "Виберіть існуючий файл...",
			"Select move destination": "Виберіть призначення для переміщення",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Виберіть версію TypeScript, яка використовується для мовних функцій JavaScript та TypeScript.",
			"Sort Imports": "Сортувати імпорти",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Пригнічує помилки @ts-check у наступному рядку файлу, очікуючи, що принаймні одна з них існуватиме.",
			"Suppresses @ts-check errors on the next line of a file.": "Вимкнути виведення помилок @ts-check для наступного рядка файлу.",
			"TS Server has not started logging.": "Сервер TS не розпочав ведення журналу.",
			"TS Server logging is currently enabled which may impact performance.": "Наразі увімкнено ведення журналу сервера TS, що може вплинути на продуктивність.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "Вхід до TS Server вимкнено. Встановіть \"typescript.tsserver.log\" і перезавантажте VS Code, щоб увімкнути ведення журналу",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "Мовна служба JS/TS аварійно завершувала роботу 5 разів за останні 5 хвилин.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\nThis may be caused by a plugin contributed by one of these extensions: {0}\nPlease try disabling these extensions before filing an issue against VS Code.": "За останні 5 хвилин мовна служба JS/TS аварійно завершувала роботу 5 разів.\nЦе може бути викликано плагіном, наданим одним із таких розширень: {0}\nСпробуйте вимкнути ці розширення перед тим, як повідомити про проблему з VS Code.",
			"The JS/TS language service crashed.": "Мовна служба JS/TS аварійно завершила роботу.",
			"The JS/TS language service crashed.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Мовна служба JS/TS аварійно завершила роботу.\nЦе може бути викликано плагіном, наданим одним із таких розширень: {0}.\nСпробуйте вимкнути ці розширення перед тим, як повідомити про проблему з VS Code.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "Мовна служба JS/TS 5 разів негайно аварійно завершила роботу. Службу не буде перезапущено.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Мовна служба JS/TS аварійно завершила роботу 5 разів. Службу не буде перезавантажено.\nЦе може бути викликано плагіном, наданим одним із таких розширень: {0}.\nСпробуйте вимкнути ці розширення перед тим, як повідомити про проблему з VS Code.",
			"The current selection cannot be extracted": "Неможливо витягнути вибрані параметри",
			"The path {0} doesn't point to a valid Node installation to run TS Server. Falling back to bundled Node.": "Шлях {0} не вказує на дійсну установку Node для запуску TS-сервера. Повернення до вбудованого Node.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "Шлях {0} не вказує на дійсний файл встановлення tsserver. Виконується відкат до вбудованої версії TypeScript.",
			"The workspace is using a version of the TypeScript Server that has been patched by Yarn PnP. This patching is a common source of bugs.": "Робоча область використовує версію сервера TypeScript, виправлену за допомогою Yarn PnP. Це виправлення є поширеним джерелом помилок.",
			"The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.": "У робочій області використовується застаріла версія TypeScript ({0}).\n\nПерш ніж повідомити про проблему, оновіть робочу область, щоб використовувати TypeScript {1} або новішу версію, щоб переконатися, що помилка ще не виправлена.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Ця робоча область містить версію TypeScript. Ви хочете використовувати версію TypeScript робочої області для функцій мови TypeScript та JavaScript?",
			"This workspace wants to use the Node installation at '{0}' to run TS Server. Would you like to use it?": "У цій робочій області потрібно використовувати установку Node у \"{0}\" для запуску TS Server. Чи хотіли б ви його використовувати?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Щоб увімкнути мовні функції JavaScript/TypeScript IntelliSense для всього проекту, виключіть папки з великою кількістю файлів, наприклад: {0}.",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Щоб увімкнути мовні функції JavaScript/TypeScript IntelliSense для всього проекту, виключіть великі папки з вихідними файлами, з якими ви не працюєте.",
			"TypeScript Server Log": "Журнал сервера TypeScript",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "Завдання TypeScript у файлі tasks.json містить \"\\\\\". У конфігурації tsconfig завдань TypeScript необхідно використовувати \"/\"",
			"TypeScript Version": "Версія TypeScript",
			"TypeScript language server exited with error. Error message is: {0}": "Мовний сервер TypeScript завершив роботу з помилкою. Повідомлення про помилку: \"{0}\".",
			"TypeScript: Configure Excludes": "TypeScript: налаштування виключень",
			"Update imports for '{0}'?": "Оновити імпорти для \"{0}\"?",
			"Update imports for the following {0} files?": "Оновити імпорти для наступних файлів ({0})?",
			"Use VS Code's Version": "Використовувати версію VS Code",
			"Use Workspace Version": "Використовувати версію робочого простору",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "Файл tsserver у VS Code був видалений іншою програмою, наприклад, через помилкове спрацювання антивіруса. Перевстановіть VS Code.",
			"Yes": "Так",
			"build - {0}": "збірка — {0}",
			"destination files": "цільові файли",
			"invalid version": "недійсна версія",
			"watch - {0}": "спостереження — {0}",
			"{0} (Fix all in file)": "{0} (Виправити все у файлі)",
			"{0} implementations": "Реалізацій: {0}",
			"{0} references": "Посилань: {0}"
		},
		"package": {
			"configuration.implicitProjectConfig.checkJs": "Увімкнення або вимкнення семантичної перевірки файлів JavaScript. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.experimentalDecorators": "Увімкнення або вимкнення параметра \"experimentalDecorators\" у файлах JavaScript, які не є частиною проєкту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.module": "Задає систему модулів для програми. Додаткові відомості: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Увімкнення або вимкнення [строгих типів функцій](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) у файлах JavaScript і TypeScript, які не є частиною проєкту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.strictNullChecks": "Увімкнення або вимкнення [строгих перевірок значень NULL](https://www.typescriptlang.org/tsconfig#strictNullChecks) у файлах JavaScript і TypeScript, які не є частиною проєкту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.target": "Задайте цільову версію мови JavaScript для згенерованого JavaScript-коду та активуйте відповідні бібліотеки. Додаткові відомості: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Увімкнути або вимкнути вбудовані підказки для значень елементів у визначеннях переліків:\r\n```typescript\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n```",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Увімкнути або вимкнути вбудовані підказки для неявних типів, які повертають функції:\r\n```typescript\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n}\r\n```",
			"configuration.inlayHints.parameterNames.enabled": "Увімкнути або вимкнути вбудовані підказки для імен параметрів:\r\n```typescript\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n```",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Приховати підказки імен параметрів, якщо ім'я параметра збігається з переданим аргументом.",
			"configuration.inlayHints.parameterTypes.enabled": "Увімкнути або вимкнути вбудовані підказки для неявних типів параметрів:\r\n```typescript\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n```",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Увімкнути або вимкнути вбудовані підказки для неявних типів у визначеннях властивостей:\r\n```typescript\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n```",
			"configuration.inlayHints.variableTypes.enabled": "Увімкнути або вимкнути вбудовані підказки для неявних типів змінних:\r\n```typescript\r\nconst foo /* :number */ = Date.now();\r\n```",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Приховати підказки про тип змінної, якщо її ім'я збігається з типом.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Цей параметр застарів. Замість нього слід використовувати \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Цей параметр застарів. Замість нього слід використовувати \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.preferGoToSourceDefinition": "Змушує \"Перейти до визначення\" уникати файлів оголошень типів, коли це можливо, викликаючи замість цього \"Перейти до вихідного визначення\". Це дозволяє активувати функцію \"Перейти до вихідного визначення\" за допомогою миші.",
			"configuration.suggest.autoImports": "Увімкнути або вимкнути пропозиції автоімпорту.",
			"configuration.suggest.classMemberSnippets.enabled": "Увімкнути або вимкнути автозавершення фрагментів коду для членів класу.",
			"configuration.suggest.completeFunctionCalls": "Доповнювати виклики функцій їхніми параметрами.",
			"configuration.suggest.completeJSDocs": "Увімкнути або вимкнути пропозиції автозавершення коментарів JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Увімкнути або вимкнути відображення автозавершень для потенційно невизначених значень, що вставляють опціональний ланцюжок викликів. Потребує увімкнених строгих перевірок NULL.",
			"configuration.suggest.includeCompletionsForImportStatements": "Увімкнути або вимкнути автозавершення для неповністю введених імпортів.",
			"configuration.suggest.jsdoc.generateReturns": "Увімкнути або вимкнути генерацію анотацій @returns у шаблонах JSDoc.",
			"configuration.suggest.names": "Увімкнути або вимкнути додавання унікальних імен із файлу до пропозицій JavaScript. Зверніть увагу, що пропозиції імен завжди вимкнені у коді JavaScript, якщо його семантика перевіряється за допомогою \"@ts-check\" або \"checkJs\".",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Увімкнути або вимкнути автозавершення фрагментів коду для методів у об'єктних літералах.",
			"configuration.suggest.paths": "Увімкнути або вимкнути пропозиції шляхів у виразах імпорту та викликах.",
			"configuration.surveys.enabled": "Увімкнути або вимкнути періодичні опитування, які допомагають нам покращити підтримку JavaScript і TypeScript у VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "Увімкнення ведення звітів про помилки в межах усього проєкту.",
			"configuration.tsserver.maxTsServerMemory": "Максимальний обсяг пам’яті (у МБ), виділений для процесу сервера TypeScript. Щоб використовувати обмеження пам’яті понад 4 ГБ, вкажіть параметр \"#typescript.tsserver.nodePath#\" для запуску сервера TS із налаштованою установкою Node.",
			"configuration.tsserver.nodePath": "Запустіть TS Server із вибірковою установкою Node. Це може бути шлях до виконуваного файлу Node або \"node\", якщо потрібно, щоб VS Code виявив установку Node.",
			"configuration.tsserver.useSeparateSyntaxServer": "Увімкнення або вимкнення запуску окремого сервера TypeScript, який може швидше реагувати на операції, пов’язані з синтаксисом, такі як згортання коду або символи документа.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Цей параметр застарів і замінений на \"typescript.tsserver.useSyntaxServer\".",
			"configuration.tsserver.useSyntaxServer": "Керує запуском спеціалізованого сервера TypeScript для швидшої обробки операцій, пов’язаних із синтаксисом, таких як згортання коду.",
			"configuration.tsserver.useSyntaxServer.always": "Використовуйте полегшений сервер синтаксису для обробки всіх операцій IntelliSense. Цей сервер може надавати IntelliSense лише для відкритих файлів.",
			"configuration.tsserver.useSyntaxServer.auto": "Запустіть як повноцінний, так і полегшений сервер, призначений для операцій із синтаксисом. Сервер синтаксису використовується для прискорення обробки синтаксичних операцій і забезпечення IntelliSense під час завантаження проєктів.",
			"configuration.tsserver.useSyntaxServer.never": "Не використовуйте спеціалізований сервер синтаксису. Використовуйте один сервер для всіх операцій IntelliSense.",
			"configuration.tsserver.useVsCodeWatcher": "Використовуйте спостерігачі за файлами VS Code замість TypeScript. Потрібно використовувати TypeScript 5.4+ у робочій області.",
			"configuration.tsserver.useVsCodeWatcher.deprecation": "Замість цього використовуйте параметр \"#typescript.tsserver.watchOptions#\".",
			"configuration.tsserver.watchOptions": "Налаштування стратегій спостереження для відстеження файлів і каталогів.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Під час використання подій файлової системи цей параметр визначає стратегію опитування, яка застосовується, коли система вичерпує власні спостерігачі файлів або не підтримує їх.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling": "Використовуйте динамічну чергу: що рідше змінюються файли, то рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Перевіряє кожен файл на наявність змін кілька разів на секунду із фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Перевіряє кожен файл на наявність змін кілька разів на секунду, але з використанням евристики, щоб деякі файли перевіряти рідше за інші.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Вимикає відкладене спостереження за каталогами. Відкладене спостереження зручне, коли відбувається багато змін одночасно (наприклад, зміна node_modules під час встановлення npm), але для деяких менш поширених конфігурацій може знадобитися вимкнути цей параметр.",
			"configuration.tsserver.watchOptions.vscode": "Використовуйте спостерігачі за файлами VS Code замість TypeScript. Потрібно використовувати у робочій області TypeScript версії 5.4 або новішої.",
			"configuration.tsserver.watchOptions.watchDirectory": "Стратегія відстеження змін у каталогах у системах, де немає рекурсивного спостереження за файлами.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Використовуйте динамічну чергу: що рідше змінюються каталоги, то рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Регулярно опитує каталоги по блоках.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Перевіряє кожен каталог на наявність змін кілька разів на секунду із фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Намагається використовувати вбудовані події операційної системи або файлової системи для відстеження змін у каталогах.",
			"configuration.tsserver.watchOptions.watchFile": "Стратегія відстеження змін окремих файлів.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Використовуйте динамічну чергу: що рідше змінюються файли, то рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Регулярно опитує файли по блоках.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Перевіряє кожен файл на наявність змін кілька разів на секунду із фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Перевіряє кожен файл на наявність змін кілька разів на секунду, але з використанням евристики, щоб певні типи файлів перевіряти рідше за інші.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Намагається використовувати вбудовані події операційної системи або файлової системи для відстеження змін файлів.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Намагається використовувати вбудовані події операційної системи або файлової системи для прослуховування змін у каталогах, що містять файл. Такий підхід дозволяє використовувати менше спостерігачів файлів, але може бути менш точним.",
			"configuration.tsserver.web.projectWideIntellisense.enabled": "Увімкнути або вимкнути IntelliSense для всього проєкту в Інтернеті. Потрібно, щоб VS Code був запущений у довіреному контексті.",
			"configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors": "Придушує семантичні помилки в Інтернеті, навіть якщо увімкнено IntelliSense для всього проєкту. Цей параметр завжди увімкнено, якщо IntelliSense для всього проєкту не увімкнено або недоступне. Див. \"#typescript.tsserver.web.projectWideIntellisense.enabled#\"",
			"configuration.tsserver.web.typeAcquisition.enabled": "Увімкнути або вимкнути отримання пакетів через Інтернет. Це увімкне IntelliSense для імпортованих пакетів. Потрібен \"#typescript.tsserver.web.projectWideIntellisense.enabled#\". Наразі не підтримується для Safari.",
			"configuration.typescript": "TypeScript",
			"configuration.updateImportsOnPaste": "Automatically update imports when pasting code. Requires TypeScript 5.6+.",
			"description": "Забезпечує розширену підтримку мови для JavaScript і TypeScript.",
			"displayName": "Можливості мов TypeScript і JavaScript",
			"format.indentSwitchCase": "Зробити відступ для виразів case у switch. Потрібно використовувати TypeScript 5.1+ у робочій області.",
			"format.insertSpaceAfterCommaDelimiter": "Визначає метод обробки пробілів після роздільника-коми.",
			"format.insertSpaceAfterConstructor": "Визначає метод обробки пробілів після ключового слова constructor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Визначає метод обробки пробілів після ключового слова function в анонімних функціях.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Визначає метод обробки пробілів після ключових слів в операторі керування потоком виконання.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Визначає обробку пробілів після відкривальної та перед закривальною порожніми фігурними дужками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям дужок у виразах JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніх фігурних дужок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніх квадратних дужок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніх круглих дужок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям дужок у шаблонному рядку.",
			"format.insertSpaceAfterSemicolonInForStatements": "Визначає метод обробки пробілів після крапки з комою в операторі for.",
			"format.insertSpaceAfterTypeAssertion": "Визначає метод обробки пробілів після ствердження типу в TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Визначає метод обробки пробілів навколо бінарного оператора.",
			"format.insertSpaceBeforeFunctionParenthesis": "Визначає метод обробки пробілів перед дужками аргументів функції.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Визначає, чи розташовується відкривальна фігурна дужка на новому рядку у блоках керування.",
			"format.placeOpenBraceOnNewLineForFunctions": "Визначає, чи розташовується відкривальна фігурна дужка на новому рядку у функціях.",
			"format.semicolons": "Визначає обробку необов’язкових крапок з комою.",
			"format.semicolons.ignore": "Не вставляти та не видаляти крапки з комою.",
			"format.semicolons.insert": "Вставляти крапки з комою наприкінці виразів.",
			"format.semicolons.remove": "Видаляти непотрібні крапки з комою.",
			"inlayHints.parameterNames.all": "Увімкнути/вимкнути підказки імен параметрів для літеральних і нелітеральних аргументів.",
			"inlayHints.parameterNames.literals": "Увімкнути підказки імен параметрів тільки для літеральних аргументів.",
			"inlayHints.parameterNames.none": "Вимкнути підказки імен параметрів.",
			"javascript.format.enable": "Увімкнення або вимкнення модуля форматування JavaScript за замовчуванням.",
			"javascript.goToProjectConfig.title": "Перейти до конфігурації проєкту (jsconfig / tsconfig)",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Вставляйте \"={}\" або \"=\"\" після імен атрибутів залежно від типу властивості. Див. \"#javascript.preferences.quoteStyle#\" для керування типом лапок, що використовуються для рядкових атрибутів.",
			"javascript.preferences.organizeImports": "Додаткові параметри для керування порядком імпортів.",
			"javascript.referencesCodeLens.enabled": "Увімкнути/вимкнути посилання CodeLens для файлів JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Увімкнути/вимкнути посилання CodeLens для всіх функцій у файлах JavaScript.",
			"javascript.suggestionActions.enabled": "Увімкнути або вимкнути пропозиції діагностики для файлів JavaScript у редакторі.",
			"javascript.validate.enable": "Увімкнення або вимкнення перевірки JavaScript.",
			"reloadProjects.title": "Перезавантажити проєкт",
			"taskDefinition.tsconfig.description": "Файл tsconfig, який визначає збірку TS.",
			"typescript.autoClosingTags": "Увімкнути або вимкнути автоматичне закриття тегів JSX.",
			"typescript.check.npmIsInstalled": "Перевірте, чи встановлено npm для [Автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Вимикає [автоматичне отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Автоматичне отримання типів завантажує пакети @types із npm для покращення IntelliSense для зовнішніх бібліотек.",
			"typescript.enablePromptUseWorkspaceTsdk": "Увімкнути запити користувачам на використання версії TypeScript, налаштованої в робочій області для IntelliSense.",
			"typescript.findAllFileReferences": "Пошук посилань на файли",
			"typescript.format.enable": "Увімкнення або вимкнення модуля форматування TypeScript за замовчуванням.",
			"typescript.goToProjectConfig.title": "Перейти до конфігурації проєкту (tsconfig)",
			"typescript.goToSourceDefinition": "Перейти до визначення джерела",
			"typescript.implementationsCodeLens.enabled": "Увімкнути або вимкнути CodeLens для реалізацій. У цьому CodeLens відображаються реалізації інтерфейсу.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Увімкнути або вимкнути CodeLens реалізацій у методах інтерфейсу.",
			"typescript.locale": "Встановлює мовний стандарт, що використовується для повідомлень про помилки JavaScript і TypeScript. За замовчуванням використовується мовний стандарт VS Code.",
			"typescript.locale.auto": "Використовувати налаштовану мову інтерфейсу VS Code.",
			"typescript.npm": "Вказує шлях до виконуваного файлу npm для [Автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Відкрити журнал сервера TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Вкажіть загальні шаблони файлів для виключення з автоматичного імпорту. Відносні шляхи визначаються відносно кореня робочої області. Шаблони оцінюються за семантикою tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).",
			"typescript.preferences.autoImportSpecifierExcludeRegexes": "Вкажіть регулярні вирази, щоб виключити автоматичний імпорт відповідних специфікацій імпорту. Приклади:\r\n\r\n- `^node:`\r\n- `lib/internal` (косі риски не потрібно екранувати...)\r\n- `/lib\\/internal/i` (...якщо тільки не включені навколишні косі риски для прапорців “i“ або “u“)\r\n- `^lodash$` (дозволити лише імпорт підшляхів із lodash)",
			"typescript.preferences.importModuleSpecifier": "Бажаний стиль шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Надавати перевагу не відносному імпорту на основі \"baseUrl\" або \"paths\", заданих у файлі jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Надавати перевагу безвідносному імпорту, лише якщо шлях відносного імпорту виходить за межі каталогу пакета або проєкту.",
			"typescript.preferences.importModuleSpecifier.relative": "Надавати перевагу відносному шляху до місця розташування імпортованого файлу.",
			"typescript.preferences.importModuleSpecifier.shortest": "Надавати перевагу не відносному імпорту, лише якщо доступний не відносний імпорт із меншою кількістю сегментів шляху, ніж у відносного імпорту.",
			"typescript.preferences.importModuleSpecifierEnding": "Бажане закінчення шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Використовувати параметри проєкту для вибору значення за замовчуванням.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Скорочення \"./component/index.js\" до \"./component/index\".",
			"typescript.preferences.importModuleSpecifierEnding.js": "Не скорочувати закінчення шляху; включити розширення `.js` або `.ts`.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Скоротити `./component/index.js` до `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Увімкнення або вимкнення пошуку залежностей у \"package.json\" для доступних операцій автоматичного імпорту.",
			"taskDefinition.tsconfig.description": "Файл tsconfig, який визначає збірку TS.",
			"typescript.autoClosingTags": "Увімкнути або вимкнути автоматичне закриття тегів JSX.",
			"typescript.check.npmIsInstalled": "Перевірте, чи встановлено npm для [автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Вимикає [автоматичне отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Автоматичне отримання типів завантажує пакети @types з npm для покращення IntelliSense для зовнішніх бібліотек.",
			"typescript.enablePromptUseWorkspaceTsdk": "Увімкнути запити користувачам на використання версії TypeScript, налаштованої в робочій області для IntelliSense.",
			"typescript.findAllFileReferences": "Знайти всі посилання на файли",
			"typescript.format.enable": "Увімкнути або вимкнути вбудований форматер TypeScript.",
			"typescript.goToProjectConfig.title": "Перейти до конфігурації проєкту (tsconfig)",
			"typescript.goToSourceDefinition": "Перейти до визначення джерела",
			"typescript.implementationsCodeLens.enabled": "Увімкнути або вимкнути CodeLens для реалізацій. Цей CodeLens відображає реалізації інтерфейсу.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Увімкнути або вимкнути CodeLens реалізацій у методах інтерфейсу.",
			"typescript.locale": "Визначає мовний стандарт, який використовується для повідомлень про помилки JavaScript і TypeScript. За замовчуванням використовується мовний стандарт VS Code.",
			"typescript.locale.auto": "Використовувати налаштовану мову інтерфейсу VS Code.",
			"typescript.npm": "Визначає шлях до виконуваного npm для [автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Відкрити журнал сервера TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Вкажіть загальні шаблони файлів для виключення з автоматичного імпорту. Відносні шляхи обчислюються відносно кореня робочої області. Шаблони оцінюються за семантикою tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).",
			"typescript.preferences.autoImportSpecifierExcludeRegexes": "Вкажіть регулярні вирази для виключення автоматичного імпорту відповідних специфікацій. Приклади:\n\n- `^node:`\n- `lib/internal` (не потрібно екранувати косі риски...)\n- `/lib\\/internal/i` (...якщо не вказані зовнішні косі риски для прапорів “i“ або “u“)\n- `^lodash$` (дозволити лише імпорт підшляхів з lodash)",
			"typescript.preferences.importModuleSpecifier": "Бажаний стиль шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Віддавати перевагу необмеженому імпорту на основі \"baseUrl\" або \"paths\", заданих у jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Використовувати необмежений імпорт, лише якщо шлях відносного імпорту виходить за межі каталогу пакета або проєкту.",
			"typescript.preferences.importModuleSpecifier.relative": "Віддавати перевагу відносному шляху до місця імпортованого файлу.",
			"typescript.preferences.importModuleSpecifier.shortest": "Використовувати найкоротший доступний шлях імпорту.",
			"typescript.preferences.importModuleSpecifierEnding": "Бажане закінчення шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Використовувати параметри проєкту для вибору значення за замовчуванням.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Скоротити \"./component/index.js\" до \"./component/index\".",
			"typescript.preferences.importModuleSpecifierEnding.js": "Не скорочувати закінчення шляху; включити розширення `.js` або `.ts`.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Скоротити `./component/index.js` до `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Увімкнути або вимкнути пошук залежностей у \"package.json\" для доступних операцій автоматичного імпорту.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Шукати залежності з урахуванням можливого впливу на продуктивність.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Ніколи не шукати залежності.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Завжди шукати залежності.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Бажаний стиль завершення атрибутів JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Вставляти \"={}\" або \"=\"\" після імен атрибутів залежно від типу властивості. Див. \"#typescript.preferences.quoteStyle#\" для вибору типу лапок у рядкових атрибутах.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Вставляти \"={}\" після імен атрибутів.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Вставляти лише імена атрибутів.",
			"typescript.referencesCodeLens.enabled": "Увімкнути/вимкнути CodeLens для посилань у файлах TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Увімкнути/вимкнути CodeLens для всіх функцій у файлах TypeScript.",
			"typescript.removeUnusedImports": "Видалити невикористані імпорти",
			"typescript.reportStyleChecksAsWarnings": "Відображати помилки перевірки стилю як попередження.",
			"typescript.restartTsServer": "Перезапустити сервер TS",
			"typescript.selectTypeScriptVersion.title": "Вибрати версію TypeScript...",
			"typescript.sortImports": "Сортувати імпорти",
			"typescript.suggest.enabled": "Увімкнути/вимкнути пропозиції автозаповнення.",
			"typescript.suggestionActions.enabled": "Увімкнути або вимкнути пропозиції щодо виправлення у файлах TypeScript у редакторі.",
			"typescript.tsc.autoDetect": "Керує автоматичним виявленням завдань tsc.",
			"typescript.tsc.autoDetect.build": "Створювати лише завдання компіляції для одноразового виконання.",
			"typescript.tsc.autoDetect.off": "Вимкнути цю функцію.",
			"typescript.tsc.autoDetect.on": "Створювати завдання компіляції та перегляду.",
			"typescript.tsc.autoDetect.watch": "Створювати лише завдання компіляції у режимі перегляду.",
			"typescript.tsdk.desc": "Вказує шлях до файлів \"tsserver\" і \"lib*.d.ts\" у встановленні TypeScript, що використовується для IntelliSense, наприклад: ./node_modules/typescript/lib.\r\n\r\n— Якщо вказати як користувацький параметр, версія TypeScript із файлу typescript.tsdk автоматично замінить вбудовану версію TypeScript.\r\n— Якщо вказати як параметр робочої області, typescript.tsdk дозволяє переключитися на використання цієї версії TypeScript для IntelliSense за допомогою команди \"TypeScript: вибрати версію TypeScript\".\r\n\r\nДодаткову інформацію про керування версіями TypeScript дивіться в [документації по TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableRegionDiagnostics": "Увімкнути діагностику на основі регіону в TypeScript. Потрібно використовувати TypeScript 5.6+ у робочій області.",
			"typescript.tsserver.enableTracing": "Увімкнути трасування продуктивності сервера TS у каталог. Ці файли трасування можна використовувати для діагностики проблем з продуктивністю сервера TS. У журналі можуть бути шляхи до файлів, вихідний код та інша інформація з вашого проєкту, в тому числі конфіденційна.",
			"typescript.tsserver.log": "Увімкнути ведення журналу для сервера TS. Цей журнал можна використовувати для діагностики проблем сервера TS. У журналі можуть бути шляхи до файлів, вихідний код та інша інформація з вашого проєкту, в тому числі конфіденційна.",
			"typescript.tsserver.pluginPaths": "Додаткові шляхи для виявлення підключених модулів мовної служби TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Абсолютний або відносний шлях. Відносний шлях повинен бути зазначений відносно папок робочої області.",
			"typescript.tsserver.trace": "Увімкнути трасування повідомлень, що надсилаються на сервер TS. Це трасування можна використовувати для діагностики проблем сервера TS. Трасування може містити шляхи до файлів, вихідний код та іншу інформацію з вашого проєкту, в тому числі конфіденційні дані.",
			"typescript.updateImportsOnFileMove.enabled": "Увімкнути або вимкнути автоматичне оновлення шляхів імпорту при перейменуванні або переміщенні файлів у VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Завжди автоматично оновлювати шляхи.",
			"typescript.updateImportsOnFileMove.enabled.never": "Ніколи не перейменовувати шляхи та не запитувати про перейменування.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Запитувати при кожному перейменуванні.",
			"typescript.validate.enable": "Увімкнути або вимкнути перевірку TypeScript.",
			"typescript.workspaceSymbols.excludeLibrarySymbols": "Виключити символи з бібліотечних файлів у результатах \"Перейти до символу в робочій області\". Потрібно використовувати TypeScript 5.3+ у робочій області.",
			"typescript.workspaceSymbols.scope": "Визначає, які файли шукаються при [перехід до символу в робочій області](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Шукати символи в усіх відкритих проєктах JavaScript або TypeScript.",
			"typescript.workspaceSymbols.scope.currentProject": "Шукати символи лише в поточному проєкті JavaScript або TypeScript.",
			"virtualWorkspaces": "У віртуальних робочих областях не підтримується розв’язання та пошук посилань у файлах.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Виконуйте налагодження та запуск коду JavaScript у Node.js за допомогою Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Після встановлення Node.js ви можете запускати програми JavaScript у терміналі, ввівши \"node your-file-name.js\"\r\nЩе один простий спосіб запуску програм Node.js — використати налагоджувач VS Code, який дозволяє запускати код, призупиняти його на різних етапах та надає покрокові інструкції для полегшення розуміння того, що відбувається.\r\n[Розпочати налагодження](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Запуск та налагодження JavaScript",
			"walkthroughs.nodejsWelcome.description": "Використовуйте всі чудові можливості JavaScript у Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js — це простий спосіб запуску коду JavaScript. За його допомогою можна швидко створювати програми командного рядка та сервери. Він також містить менеджер пакетів npm, що полегшує повторне використання та спільне використання коду JavaScript.\r\n[Встановити Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Встановити Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js — це простий спосіб запуску коду JavaScript. За його допомогою можна швидко створювати програми командного рядка та сервери. Він також містить менеджер пакетів npm, що полегшує повторне використання та спільне використання коду JavaScript.\r\n[Встановити Node.js](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Встановити Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Додаткова інформація про JavaScript і Node.js у Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Хочете дізнатися більше про JavaScript, Node.js та VS Code? Ознайомтесь з нашими документами!\r\nУ нас є багато ресурсів для вивчення [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) і [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Дізнатися більше](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Інші можливості",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Давайте створимо перший файл JavaScript. Для цього необхідно створити новий файл та зберегти його з розширенням \".js\" в кінці імені файлу.\r\n[Створити файл JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Створити файл JavaScript",
			"walkthroughs.nodejsWelcome.title": "Початок роботи з JavaScript та Node.js",
			"workspaceTrust": "Розширення вимагає довіри до робочої області, коли використовується версія робочої області, оскільки воно виконує код, зазначений робочою областю."
		}
	}
}
